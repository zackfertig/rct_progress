name: Build portable binaries

# Ensure the workflow token can create/update releases
permissions:
  contents: write

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.11']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller

      - name: Build rct-highscores (PyInstaller)
        run: |
          pyinstaller --onefile --name rct-highscores --paths src --hidden-import rct_progress.core build_highscores.py

      - name: Build rct-progress (PyInstaller)
        run: |
          pyinstaller --onefile --name rct-progress --paths src src/rct_progress/cli.py

      - name: Prepare artifacts
        shell: bash
        run: |
          set -e
          mkdir -p artifacts
          OS="${{ runner.os }}"
          ARCH="${{ runner.arch }}"
          PLATFORM="${OS}-${ARCH}"
          echo "Platform: $PLATFORM"
          # PyInstaller puts binaries in dist/
          cp dist/rct-highscores* artifacts/ 2>/dev/null || true
          cp dist/rct-progress* artifacts/ 2>/dev/null || true
          # Suffix files with platform for clarity
          for f in artifacts/*; do
            bn=$(basename "$f")
            mv "$f" "artifacts/${bn}.${PLATFORM}"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rct_progress-${{ github.ref_name }}-${{ runner.os }}
          path: artifacts/*

  package:
    name: Build Python sdist+wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist+wheel
        run: |
          python -m build

      - name: Upload dists
        uses: actions/upload-artifact@v4
        with:
          name: rct_progress-${{ github.ref_name }}-python-dists
          path: |
            dist/*.whl
            dist/*.tar.gz

  release:
    name: Attach to GitHub Release
    needs: [build, package]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./all-artifacts

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            all-artifacts/**
          token: ${{ secrets.GITHUB_TOKEN }}
